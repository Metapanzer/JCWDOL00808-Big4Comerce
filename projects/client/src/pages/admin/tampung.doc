import { useState, useEffect } from "react";
import axios from "axios";
import ReactPaginate from "react-paginate";
// import { Input, Button, Table, Tbody, Tr, Th, Td, Text, Box, Flex, Thead } from "@chakra-ui/react";

const UserList = () => {
  const [users, setUsers] = useState([]);
  const [page, setPage] = useState(0);
  const [limit, setLimit] = useState(10);
  const [pages, setPages] = useState(0);
  const [rows, setRows] = useState(0);
  const [keyword, setKeyword] = useState("");
  const [query, setQuery] = useState("");
  const [msg, setMsg] = useState("");

  useEffect(() => {
    getUsers();
  }, [page, keyword]);

  const getUsers = async () => {
    const response = await axios.get(`http://localhost:8000/admin/getAdminUserList?search_query=${keyword}&page=${page}&limit=${limit}`);
    setUsers(response.data.result);
    setPage(response.data.page);
    setPages(response.data.totalPage);
    setRows(response.data.totalRows);
  };

  const changePage = ({ selected }) => {
    setPage(selected);
    if (selected === 9) {
      setMsg("Jika tidak menemukan data yang Anda cari, silahkan cari data dengan kata kunci spesifik!");
    } else {
      setMsg("");
    }
  };

  const searchData = (e) => {
    e.preventDefault();
    setPage(0);
    setMsg("");
    setKeyword(query);
  };

  return (
    <Box mt={5}>
      <Box d="flex" justifyContent="center">
        <form onSubmit={searchData}>
          <Box d="flex" alignItems="center">
            <Input type="text" value={query} onChange={(e) => setQuery(e.target.value)} placeholder="Find something here..." mr={2} />
            <Button type="submit" colorScheme="blue">
              Search
            </Button>
          </Box>
        </form>
      </Box>

      <Table variant="striped" colorScheme="gray" mt={2}>
        <Thead>
          <Tr>
            <Th>ID</Th>
            <Th>Name</Th>
            <Th>Email</Th>
            <Th>Phone Number</Th>
            <Th>verification Stats</Th>
          </Tr>
        </Thead>
        <Tbody>
          {users.map((user) => (
            <Tr key={user.id}>
              <Td>{user.id}</Td>
              <Td>{user.full_name}</Td>
              <Td>{user.email}</Td>
              <Td>{user.phone_number}</Td>
              <Td>{user.is_verified ? "Verified" : "Not Verified"}</Td>
            </Tr>
          ))}
        </Tbody>
      </Table>

      <Text>
        Total Rows: {rows} Page: {rows ? page + 1 : 0} of {pages}
      </Text>

      <Text textAlign="center" color="red.500">
        {msg}
      </Text>

      <Box d="flex" justifyContent="center">
        <ReactPaginate
          previousLabel={"< Prev"}
          nextLabel={"Next >"}
          pageCount={Math.min(10, pages)}
          onPageChange={changePage}
          containerClassName={"pagination-list"}
          pageLinkClassName={"pagination-link"}
          previousLinkClassName={"pagination-previous"}
          nextLinkClassName={"pagination-next"}
          activeLinkClassName={"pagination-link is-current"}
          disabledLinkClassName={"pagination-link is-disabled"}
        />
      </Box>
    </Box>
  );
};

export default UserList;
